name: ALZ Zone-0 pipeline

on:
  workflow_dispatch:
    branches:
      - "main"
    paths:
      - 'infra-as-code/bicep/modules/managementGroups/**'
      - 'infra-as-code/bicep/modules/policy/**'
      - 'infra-as-code/bicep/modules/customRoleDefinitions/**'
      - 'infra-as-code/bicep/orchestration/subPlacementAll/**'

env:
  ManagementGroupPrefix: ${{ vars.MG_PREFIX }}
  TopLevelManagementGroupDisplayName: ${{ vars.MG_TOPLEVEL_DISPLAYNAME }}
  Location: ${{ vars.LOCATION_GWC }}
  # LoggingSubId: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
  # LoggingResourceGroupName: "alz-logging-001"
  # HubNetworkSubId: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
  # HubNetworkResourceGroupName: "alz-vwan-001"
  # RoleAssignmentManagementGroupId: "zmoalz-platform"
  # PrivateSpokeNetworkSubId: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
  # PrivateSpokeNetworkResourceGroupName: "Private_LZ1_Networking"
  # PublicSpokeNetworkSubId: "1e63056d-66f8-4d36-8454-b4375eb8578f"
  # PublicSpokeNetworkResourceGroupName: "Public_LZ1_Networking"
  runNumber: ${{ github.run_number }}

permissions:
      id-token: write # if this is not setup we will not be able to use the az login federation feature
      contents: read

jobs:
  bicep_tenant_deploy:
    runs-on: ubuntu-latest
    environment: production
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Azure Login
        uses: azure/login@v1
        with:
            client-id: ${{ secrets.AZURE_CLIENT_ID }}
            tenant-id: ${{ secrets.AZURE_TENANT_ID }}
            subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      - name: Az CLI Deploy Management Groups
        id: create_mgs
        shell: bash
        run: |
            az deployment tenant create --template-file infra-as-code/bicep/modules/managementGroups/managementGroups.bicep --parameters parTopLevelManagementGroupPrefix=${{ env.ManagementGroupPrefix }} parTopLevelManagementGroupDisplayName="${{ env.TopLevelManagementGroupDisplayName }}" --location ${{ env.Location }} --name create_mgs-${{ env.runNumber }}
      - name: Deploy Custom Policy Definitions
        id: create_policy_defs
        uses: azure/arm-deploy@v1
        with:
          scope: managementgroup
          managementGroupId: ${{ env.ManagementGroupPrefix }}
          region: ${{ env.Location }}
          template: infra-as-code/bicep/modules/policy/definitions/customPolicyDefinitions.bicep
          parameters: infra-as-code/bicep/modules/policy/definitions/parameters/customPolicyDefinitions.parameters.all.json
          deploymentName: create_policy_defs-${{ env.runNumber }}
          failOnStdErr: false
      - name: Deploy Custom Role Definitions
        id: create_rbac_roles
        uses: azure/arm-deploy@v1
        with:
          scope: managementgroup
          managementGroupId: ${{ env.ManagementGroupPrefix }}
          region: ${{ env.Location }}
          template: infra-as-code/bicep/modules/customRoleDefinitions/customRoleDefinitions.bicep
          parameters: infra-as-code/bicep/modules/customRoleDefinitions/parameters/customRoleDefinitions.parameters.all.json
          deploymentName: create_rbac_roles-${{ env.runNumber }}
          failOnStdErr: false
      # - name: Deploy Subscription Placement
      #   id: create_subscription_placement
      #   uses: azure/arm-deploy@v1
      #   with:
      #     scope: managementgroup
      #     managementGroupId: ${{ env.ManagementGroupPrefix }}
      #     region: ${{ env.Location }}
      #     template: infra-as-code/bicep/orchestration/subPlacementAll/subPlacementAll.bicep
      #     parameters: infra-as-code/bicep/orchestration/subPlacementAll/parameters/subPlacementAll.parameters.all.jso
      #     deploymentName: create_subscription_placement-${{ env.runNumber }}
      #     failOnStdErr: false
